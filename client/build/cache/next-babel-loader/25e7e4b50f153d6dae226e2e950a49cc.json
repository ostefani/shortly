{"ast":null,"code":"var _jsxFileName = \"/Users/olga/Code/shortly/client/containers/Home/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport Form from '../Form';\nimport postURI from '../../lib/postURI';\nimport postSubpart from '../../lib/postSubpart';\nexport default (() => {\n  const {\n    0: value,\n    1: setValue\n  } = useState({\n    link: '',\n    subpart: ''\n  });\n  const {\n    0: error,\n    1: setError\n  } = useState('');\n  const {\n    0: isURLCreated,\n    1: setIsURLCreated\n  } = useState(false);\n\n  const handleChange = event => {\n    if (error) {\n      setError('');\n    } // setLinkValue(event.target.value);\n\n\n    setValue(_objectSpread({}, value, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleSubmitURI = async event => {\n    event.preventDefault();\n    setIsURLCreated(false);\n    const result = await postURI({\n      link: value.link\n    });\n\n    if (result.created) {\n      setValue(_objectSpread({}, value, {\n        link: result.shortURI\n      }));\n      setIsURLCreated(true);\n    } else {\n      setError(result.error || result.message);\n    }\n  };\n\n  const handleSubmitSubpart = async event => {\n    event.preventDefault();\n    console.log('subpart: ', value.subpart);\n    const result = await postSubpart({\n      subpart: value.subpart\n    });\n    console.log('result: ', result);\n  };\n\n  return __jsx(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(Form, {\n    onSubmit: isURLCreated ? handleSubmitSubpart : handleSubmitURI,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, __jsx(Label, {\n    inputId: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"Enter your link\"), __jsx(Input, {\n    name: \"link\",\n    id: \"link\",\n    placeholder: \"Paste your link\",\n    value: value.link,\n    error: error,\n    onChange: handleChange,\n    disabled: isURLCreated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), isURLCreated && __jsx(React.Fragment, null, __jsx(Label, {\n    inputId: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, \"You can change subpart\"), __jsx(Input, {\n    name: \"subpart\",\n    id: \"subpart\",\n    placeholder: \"Your new subpart\",\n    value: value.subpart,\n    error: error,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  })), __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"Send\")));\n});","map":{"version":3,"sources":["/Users/olga/Code/shortly/client/containers/Home/index.js"],"names":["React","useState","Page","Label","Input","Button","Form","postURI","postSubpart","value","setValue","link","subpart","error","setError","isURLCreated","setIsURLCreated","handleChange","event","target","name","handleSubmitURI","preventDefault","result","created","shortURI","message","handleSubmitSubpart","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport Form from '../Form';\nimport postURI from '../../lib/postURI';\nimport postSubpart from '../../lib/postSubpart';\n\nexport default () => {\n    const [value, setValue] = useState({ link: '', subpart: '' });\n    const [error, setError] = useState('');\n    const [isURLCreated, setIsURLCreated] = useState(false);\n\n    const handleChange = event => {\n        if (error) {\n            setError('');\n        }\n        // setLinkValue(event.target.value);\n        setValue({ ...value, [event.target.name]: event.target.value });\n    };\n\n    const handleSubmitURI = async event => {\n        event.preventDefault();\n        setIsURLCreated(false);\n        const result = await postURI({ link: value.link });\n\n        if (result.created) {\n            setValue({ ...value, link: result.shortURI });\n            setIsURLCreated(true);\n        }\n        else {\n            setError(result.error || result.message);\n        }\n    };\n\n    const handleSubmitSubpart = async event => {\n        event.preventDefault();\n        console.log('subpart: ', value.subpart);\n        const result = await postSubpart({ subpart: value.subpart });\n        console.log('result: ', result);\n    };\n\n    return (\n        <Page>\n            <Form onSubmit={isURLCreated ? handleSubmitSubpart : handleSubmitURI}>\n                <Label inputId=\"link\">Enter your link</Label>\n                <Input\n                    name=\"link\"\n                    id=\"link\"\n                    placeholder=\"Paste your link\"\n                    value={value.link}\n                    error={error}\n                    onChange={handleChange}\n                    disabled={isURLCreated}\n                />\n                {isURLCreated\n                    && (\n                        <>\n                            <Label inputId=\"link\">You can change subpart</Label>\n                            <Input\n                                name=\"subpart\"\n                                id=\"subpart\"\n                                placeholder=\"Your new subpart\"\n                                value={value.subpart}\n                                error={error}\n                                onChange={handleChange}\n                            />\n                        </>\n                    )}\n                <Button>Send</Button>\n            </Form>\n            {/* Working on it\n            isURLCreated\n                    && (\n                        <Form onSubmit={handleSubmitSubpart}>\n                            <Label inputId=\"link\">You can change subpart</Label>\n                            <Input\n                                name=\"subpart\"\n                                id=\"subpart\"\n                                placeholder=\"Your new subpart\"\n                                value={value.subpart}\n                                error={error}\n                                onChange={handleChange}\n                            />\n                            {isURLCreated && <Button>Send</Button>}\n                        </Form>\n                    )*/}\n        </Page>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}