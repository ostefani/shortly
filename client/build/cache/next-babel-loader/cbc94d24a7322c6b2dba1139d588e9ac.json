{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/olga/Code/shortly/client/pages/my-links.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport AllLinks from '../containers/AllLinks';\nimport fetchURI from '../lib/fetchURI';\nexport default (function () {\n  var _useState = useState(false),\n      onScroll = _useState[0],\n      setOnScroll = _useState[1];\n\n  var _useState2 = useState(1),\n      pageNum = _useState2[0],\n      setPageNum = _useState2[1];\n\n  var _useState3 = useState([]),\n      links = _useState3[0],\n      setLinks = _useState3[1];\n\n  var _useState4 = useState(false),\n      isListEnd = _useState4[0],\n      setIsListEnd = _useState4[1];\n\n  var _useState5 = useState(false),\n      isLoading = _useState5[0],\n      setIsLoading = _useState5[1];\n\n  useEffect(function () {\n    if (onScroll && !isListEnd) {\n      setPageNum(pageNum + 1);\n      setOnScroll(false);\n    }\n  }, [onScroll, isListEnd]);\n  useEffect(function () {\n    var handleScroll = function handleScroll() {\n      var maxScroll = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n      var currentScroll = document.documentElement.scrollTop;\n\n      if (currentScroll === maxScroll) {\n        setOnScroll(true);\n      }\n    };\n\n    document.addEventListener('scroll', handleScroll);\n    return function () {\n      return document.removeEventListener('scroll', handleScroll);\n    };\n  }, [setOnScroll]);\n\n  var fetchList = function fetchList() {\n    var result;\n    return _regeneratorRuntime.async(function fetchList$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetchURI({\n              pageNum: pageNum\n            }));\n\n          case 3:\n            result = _context.sent;\n            setIsLoading(false);\n\n            if (result.found && result.links.length > 0) {\n              setLinks([].concat(_toConsumableArray(links), _toConsumableArray(result.links)));\n            } else if (result.found && result.links.length === 0) {\n              setIsListEnd(true);\n            } else if (result.error || result.message) {\n              // Show modal here\n              console.log(result.error || result.message);\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    if (!isListEnd) {\n      fetchList(pageNum);\n    }\n  }, [fetchURI, pageNum, isListEnd]);\n  return __jsx(AllLinks, {\n    links: links,\n    isLoading: isLoading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }\n  });\n});","map":{"version":3,"sources":["/Users/olga/Code/shortly/client/pages/my-links.js"],"names":["React","useEffect","useState","AllLinks","fetchURI","onScroll","setOnScroll","pageNum","setPageNum","links","setLinks","isListEnd","setIsListEnd","isLoading","setIsLoading","handleScroll","maxScroll","document","documentElement","scrollHeight","clientHeight","currentScroll","scrollTop","addEventListener","removeEventListener","fetchList","result","found","length","error","message","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport AllLinks from '../containers/AllLinks';\nimport fetchURI from '../lib/fetchURI';\n\nexport default () => {\n    const [onScroll, setOnScroll] = useState(false);\n    const [pageNum, setPageNum] = useState(1);\n    const [links, setLinks] = useState([]);\n    const [isListEnd, setIsListEnd] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        if (onScroll && !isListEnd) {\n            setPageNum(pageNum + 1);\n            setOnScroll(false);\n        }\n    }, [onScroll, isListEnd]);\n\n\n    useEffect(() => {\n        const handleScroll = () => {\n            const maxScroll = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n            const currentScroll = document.documentElement.scrollTop;\n\n            if (currentScroll === maxScroll) {\n                setOnScroll(true);\n            }\n        };\n\n        document.addEventListener('scroll', handleScroll);\n        return () => document.removeEventListener('scroll', handleScroll);\n    }, [setOnScroll]);\n\n    const fetchList = async () => {\n        setIsLoading(true);\n        const result = await fetchURI({ pageNum });\n        setIsLoading(false);\n\n        if (result.found && result.links.length > 0) {\n            setLinks([...links, ...result.links]);\n        }\n        else if (result.found && result.links.length === 0) {\n            setIsListEnd(true);\n        }\n        else if (result.error || result.message) {\n            // Show modal here\n            console.log(result.error || result.message);\n        }\n    };\n\n    useEffect(() => {\n        if (!isListEnd) {\n            fetchList(pageNum);\n        }\n    }, [fetchURI, pageNum, isListEnd]);\n\n\n    return <AllLinks links={links} isLoading={isLoading} />;\n};\n"]},"metadata":{},"sourceType":"module"}